#############
## PROJECT ##
#############

[project]

name = "pypara"
version = "0.0.27"

description = "Currencies, Monetary Value Arithmetic/Conversion and Some Type Convenience"
keywords = ["finance"]
readme = "README.md"
license = { text = "BSD License" }
authors = [{ name = "Vehbi Sinan Tunalioglu", email = "vst@vsthost.com" }]

requires-python = ">=3.8"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = ["python-dateutil<3.0"]

[project.urls]

Homepage = "https://github.com/vst/pypara"
Documentation = "https://github.com/vst/pypara#readme"
Repository = "https://github.com/vst/pypara.git"
Changelog = "https://github.com/vst/pypara/blob/main/CHANGELOG.md"

##################
## BUILD SYSTEM ##
##################

[build-system]

requires = ["setuptools"]
build-backend = "setuptools.build_meta"

######################
## TOOL: SETUPTOOLS ##
######################

[tool.setuptools.packages.find]

where = ["."]
include = ["pypara*"]
namespaces = false

[tool.setuptools.package-data]

pypara = ["py.typed"]

#################
## TOOL: BLACK ##
#################

[tool.black]

line-length = 120
target_version = ["py38"]

#################
## TOOL: ISORT ##
#################

[tool.isort]

line_length = 120
multi_line_output = 3
include_trailing_comma = true

################
## TOOL: mypy ##
################

[tool.mypy]

check_untyped_defs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true


###################
## TOOL: pyright ##
###################

[tool.pyright]

## Provide platform information:
pythonPlatform = "Linux"
pythonVersion = "3.10"

## Typecheck following directories:
include = ["pypara", "tests"]

## Exclude following directories from typechecking:
exclude = []

## Ignore some files:
ignore = []

## We want strict type-checking mode:
typeCheckingMode = "basic"

## Demote (some) report groups to "warning" because mypy is our primary source:
reportGeneralTypeIssues = "warning"
reportMissingImports = "warning"
reportMissingTypeStubs = "warning"
reportPropertyTypeMismatch = "warning"
reportUnusedImport = "warning"

## Ignore some report groups:
# reportSelfClsParameterName = false # Pylint handles this and pyright is not PEP-8 compliant.

####################
## TOOL: coverage ##
####################

[tool.coverage.run]

source = ["."]

##################
## TOOL: flake8 ##
##################

## Note: When this section was added, there was no pyproject.toml
## support of flake8 which is a very disputed issue:
##
## https://github.com/PyCQA/flake8/issues/234
##
## We are now using Flake8-pyproject flake8 plugin to use
## `pyproject.toml`.

[tool.flake8]

## Define error messages to be ignored:
ignore = [
    "E266",  ## We want double hash to be allowed for comments.
    "F811",  ## Still problem with @overload.
    "T202",  ## We are not on Python 2.x.
    "TC001", ## We will not use TYPE_CHECKING block for a while.
    "TC002", ## We will not use TYPE_CHECKING block for a while.
    "TC003", ## We will not use TYPE_CHECKING block for a while.
    "TC006", ## Needs testing.
    "D100",  ## We do not intend to add docstring to all definitions yet.
    "D101",  ## We do not intend to add docstring to all definitions yet.
    "D102",  ## We do not intend to add docstring to all definitions yet.
    "D103",  ## We do not intend to add docstring to all definitions yet.
    "D104",  ## We do not intend to add docstring to all definitions yet.
    "D105",  ## We do not intend to add docstring to all definitions yet.
    "D107",  ## We do not intend to add docstring to all definitions yet.
    "D200",  ## No need to fit one-line docstrings on one line with quotes.
    "D205",  ## We are starting with a blank line.
    "D400",  ## Plugin is a little confused.
    "D401",  ## We will be imperative later.
]

## Define files and directories to be excluded from checking:
exclude = [
    "__pycache__",
    "__static",
    ".cache",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".tox",
    "*.egg-info",
    "*.py[codi]",
    "build",
    "dev",
    "dist",
]

## Defines maximum MCCABE complexity allowed (TODO: Gradually reduce to 5).
max-complexity = 7

## Defines the maximum line length.
max-line-length = 120

## Indicates that doctests to be run.
doctests = true

## Indicates that we want summary statistics of error messages, if any.
statistics = true

## Set Python version (for flake8-typing-imports flake8 plugin):
min_python_version = "3.10"

###############
## TOOL: tox ##
###############9

[tool.tox]

legacy_tox_ini = """
[tox]

skipsdist = True
isolated_build = True

[testenv]

## We will explicitly call these executables:
allowlist_externals =
    black
    flake8
    isort
    mypy
    pytest

commands =
    black --check pypara tests
    isort --check-only pypara tests
    flake8 pypara tests
    mypy pypara tests
    pytest --verbose --cov --ignore=docs/source/conf.py --doctest-modules
"""
